# (1)数字(int): 整形，浮点
#
#  整数类型定义的时候变量名后面直接跟数字，数字类型是不可变数据类型
# (2)字符串（str）:
#
# 定义字符串的时候需要用引号引起来,可以用单，双，三引号，三引号多表示多行字符串，这样就可以省掉“\n”换行符换行。
#
# （三），列表：
#
#  列表是常见的数据类型，用中括号[]定义，可以存多个任意类似的值，列表和字符串一样都是有序排列的，可以用切片和索引的方式访问数据，并且列表是可变数据类型。
#
#
# （四）字典
#
# 字典是一种映射型的数据类型，每个元素成对出现，即key- value,每对元素key 和  value“：”冒号分开，元素之间用逗号隔开，整个字典包括子在{}中。
#
# 字典中的“key”必须是不可变类型，“value”则可以是任意类型，如果出现一个“key”被多个“value”赋值，那么值为最后一个被赋的值，字典是可变数据类型，并且是无序的。所有不可变的数据类型都可以作为字典中的key,例如数字，字符串，元祖。字典的基本操作包括 创建，增加，删除，修改，查找，遍历，更新，in  or  not in 等。
#
#
# （五），元祖
#
# 元祖和字符串一样都是不可修改的，用（）小括号括起来，元素使用逗号隔开。注意当元祖中只有一个元素的时候，要加上逗号，不然就变成字符串了。
#
# 元祖的基本操作方法有 统计，查找，嵌套修改，切片，in ，not in，
#
# （六）集合
#
# 集合是一个无序，不重复，每个元素必须是不可变类型的数据组合，主要作用有去重和关系运算。
#
#
# 数据类型总结：
#
# 按照存值对象分：
#
# 单个：数字，字符串
#
# 多个：列表，字典，元祖　
#
# 按照可变不可变分：
#
# 可变（不可hash）： 列表，字典
#
# 不可变（可hash）：数字，字符串，元祖
#
# 按访问顺序分：
#
# 顺序访问   ： 字符串，列表，元祖（序列类型）
#
# key访问   ： 字典                           （映射类型）
# 列表，字典 数字，字符串，元祖